/*
! tailwindcss v3.4.1 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

:root {
  --hue-color: 240deg;
  --warning-hue: 4;
  --warning-color-darker: hsl(var(--warning-hue, 4deg), 57%, 53%);
  --warning-color: hsl(var(--warning-hue, 4deg), 69%, 61%);
  --warning-color-lighter: hsl(var(--warning-hue, 4deg), 92%, 85%);
  --body-dark-mode2: calc(1 - var(--dark-mode));
  --body-color-50: var(--hue-color, 240deg) 12% max(5%, 100% * var(--body-dark-mode2, 1));
  --body-color-100: var(--hue-color, 240deg) 12% max(10%, 95% * var(--body-dark-mode2, 1));
  --body-color-200: var(--hue-color, 240deg) 12% max(20%, 85% * var(--body-dark-mode2, 1));
  --body-color-300: var(--hue-color, 240deg) 12% max(30%, 75% * var(--body-dark-mode2, 1));
  --body-color-400: var(--hue-color, 240deg) 12% max(40%, 65% * var(--body-dark-mode2, 1));
  --body-color-500: var(--hue-color, 240deg) 12% max(50%, 55% * var(--body-dark-mode2, 1));
  /* Legacy body color */
  --body-dark-mode: calc(85% * var(--dark-mode, 0));
  --body-color: var(--hue-color, 240deg) 12%
			max(95% - var(--body-dark-mode), var(--body-dark-mode) - 95%);
  --border-dark-mode: calc(100% * var(--dark-mode, 0));
  --border-color: hsl(
			var(--hue-color, 240deg),
			12%,
			max(76.5% - var(--border-dark-mode, 0%), var(--border-dark-mode, 0%) - 76.5%)
		);
  --input-color: hsl(var(--hue-color, 240deg), 70%, 96%);
  /*==================================================
			Primary colors
		==================================================*/
  --primary-color-50: var(--hue-color, 240deg) 81.92498870311792% 88.935%;
  --primary-color-100: var(--hue-color, 240deg) 76.4150943396226% 83.03999999999999%;
  --primary-color-200: var(--hue-color, 240deg) 73.55080449636321% 77.315%;
  --primary-color-300: var(--hue-color, 240deg) 71.671388101983% 71.76%;
  --primary-color-400: var(--hue-color, 240deg) 70.26022304832715% 66.375%;
  --primary-color-500: var(--hue-color, 240deg) 69.10401647785788% 61.160000000000004%;
  --primary-color-600: var(--hue-color, 240deg) 50.9433962264151% 49.68749999999999%;
  --primary-color-700: var(--hue-color, 240deg) 58.730158730158735% 39.06%;
  --primary-color-800: var(--hue-color, 240deg) 67.3640167364017% 29.277499999999996%;
  --primary-color-900: var(--hue-color, 240deg) 76.99115044247789% 20.339999999999996%;
  --primary-color-950: var(--hue-color, 240deg) 87.79342723004696% 12.2475%;
  /*==================================================
			Text colors
		==================================================*/
  --text-dark-mode: calc(100% * var(--dark-mode));
  --text-lightness-300: 36.075%;
  --text-color-300: var(--hue-color, 240deg) 12%
			max(
				var(--text-lightness-300) - var(--text-dark-mode, 0%),
				var(--text-dark-mode, 0%) - var(--text-lightness-300)
			);
  --text-lightness-400: 27.888%;
  --text-color-400: var(--hue-color, 240deg) 12%
			max(
				var(--text-lightness-400) - var(--text-dark-mode, 0%),
				var(--text-dark-mode, 0%) - var(--text-lightness-400)
			);
  --text-lightness-500: 20.686999999999998%;
  --text-color-500: var(--hue-color, 240deg) 12%
			max(
				var(--text-lightness-500) - var(--text-dark-mode, 0%),
				var(--text-dark-mode, 0%) - var(--text-lightness-500)
			);
  --text-lightness-600: 14.472000000000001%;
  --text-color-600: var(--hue-color, 240deg) 12%
			max(
				var(--text-lightness-600) - var(--text-dark-mode, 0%),
				var(--text-dark-mode, 0%) - var(--text-lightness-600)
			);
  --text-lightness-700: 9.243%;
  --text-color-700: var(--hue-color, 240deg) 12%
			max(
				var(--text-lightness-700) - var(--text-dark-mode, 0%),
				var(--text-dark-mode, 0%) - var(--text-lightness-700)
			);
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.pointer-events-none {
  pointer-events: none;
}

.pointer-events-auto {
  pointer-events: auto;
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.-bottom-12 {
  bottom: -3rem;
}

.-left-12 {
  left: -3rem;
}

.-right-12 {
  right: -3rem;
}

.-top-12 {
  top: -3rem;
}

.left-1\/2 {
  left: 50%;
}

.right-5 {
  right: 1.25rem;
}

.top-1\/2 {
  top: 50%;
}

.top-5 {
  top: 1.25rem;
}

.z-50 {
  z-index: 50;
}

.z-\[-1\] {
  z-index: -1;
}

.col-span-2 {
  grid-column: span 2 / span 2;
}

.float-right {
  float: right;
}

.m-8 {
  margin: 2rem;
}

.mx-2 {
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.-ml-4 {
  margin-left: -1rem;
}

.-mt-4 {
  margin-top: -1rem;
}

.mb-16 {
  margin-bottom: 4rem;
}

.line-clamp-3 {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 3;
}

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.inline {
  display: inline;
}

.flex {
  display: flex;
}

.grid {
  display: grid;
}

.hidden {
  display: none;
}

.aspect-\[1\/1\.125\] {
  aspect-ratio: 1/1.125;
}

.aspect-\[19\/3\] {
  aspect-ratio: 19/3;
}

.aspect-\[8\/3\] {
  aspect-ratio: 8/3;
}

.aspect-\[calc\(1000\/315\.97\)\/1\] {
  aspect-ratio: calc(1000 / 315.97)/1;
}

.aspect-square {
  aspect-ratio: 1 / 1;
}

.size-6 {
  width: 1.5rem;
  height: 1.5rem;
}

.h-16 {
  height: 4rem;
}

.h-4 {
  height: 1rem;
}

.h-5 {
  height: 1.25rem;
}

.h-7 {
  height: 1.75rem;
}

.h-8 {
  height: 2rem;
}

.h-full {
  height: 100%;
}

.h-screen {
  height: 100vh;
}

.max-h-full {
  max-height: 100%;
}

.min-h-10 {
  min-height: 2.5rem;
}

.min-h-screen {
  min-height: 100vh;
}

.w-1\/2 {
  width: 50%;
}

.w-4 {
  width: 1rem;
}

.w-48 {
  width: 12rem;
}

.w-72 {
  width: 18rem;
}

.w-8 {
  width: 2rem;
}

.w-full {
  width: 100%;
}

.min-w-0 {
  min-width: 0px;
}

.min-w-72 {
  min-width: 18rem;
}

.max-w-7xl {
  max-width: 80rem;
}

.max-w-full {
  max-width: 100%;
}

.max-w-none {
  max-width: none;
}

.max-w-prose {
  max-width: 65ch;
}

.max-w-xs {
  max-width: 20rem;
}

.shrink-0 {
  flex-shrink: 0;
}

.grow {
  flex-grow: 1;
}

.grow-0 {
  flex-grow: 0;
}

.basis-1\/2 {
  flex-basis: 50%;
}

.basis-1\/4 {
  flex-basis: 25%;
}

.basis-\[calc\(100\%_-_0\.5rem\)\] {
  flex-basis: calc(100% - 0.5rem);
}

.basis-full {
  flex-basis: 100%;
}

.-translate-x-1\/2 {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.-translate-y-1\/2 {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-0 {
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-\[-50\%\] {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-full {
  --tw-translate-x: 100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.rotate-90 {
  --tw-rotate: 90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.scale-125 {
  --tw-scale-x: 1.25;
  --tw-scale-y: 1.25;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.animate-\[cursorBlink_1\.5s_steps\(1\)_infinite_alternate\] {
  animation: cursorBlink 1.5s steps(1) infinite alternate;
}

.cursor-not-allowed {
  cursor: not-allowed;
}

.list-inside {
  list-style-position: inside;
}

.list-disc {
  list-style-type: disc;
}

.grid-cols-6 {
  grid-template-columns: repeat(6, minmax(0, 1fr));
}

.grid-cols-\[repeat\(auto-fit\2c minmax\(9rem\2c 1fr\)\)\] {
  grid-template-columns: repeat(auto-fit,minmax(9rem,1fr));
}

.flex-col {
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap;
}

.place-items-center {
  place-items: center;
}

.content-center {
  align-content: center;
}

.content-end {
  align-content: flex-end;
}

.items-start {
  align-items: flex-start;
}

.items-end {
  align-items: flex-end;
}

.items-center {
  align-items: center;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.justify-items-center {
  justify-items: center;
}

.gap-1 {
  gap: 0.25rem;
}

.gap-12 {
  gap: 3rem;
}

.gap-2 {
  gap: 0.5rem;
}

.gap-3 {
  gap: 0.75rem;
}

.gap-5 {
  gap: 1.25rem;
}

.gap-6 {
  gap: 1.5rem;
}

.gap-8 {
  gap: 2rem;
}

.gap-x-3 {
  -moz-column-gap: 0.75rem;
       column-gap: 0.75rem;
}

.self-center {
  align-self: center;
}

.self-stretch {
  align-self: stretch;
}

.justify-self-start {
  justify-self: start;
}

.overflow-hidden {
  overflow: hidden;
}

.overflow-x-hidden {
  overflow-x: hidden;
}

.text-ellipsis {
  text-overflow: ellipsis;
}

.rounded-2xl {
  border-radius: 1rem;
}

.rounded-full {
  border-radius: 9999px;
}

.rounded-lg {
  border-radius: 0.5rem;
}

.rounded-md {
  border-radius: 0.375rem;
}

.rounded-sm {
  border-radius: 0.125rem;
}

.rounded-xl {
  border-radius: 0.75rem;
}

.border-l-\[1px\] {
  border-left-width: 1px;
}

.bg-body-100 {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--body-color-100) / var(--tw-bg-opacity));
}

.bg-body-100\/90 {
  background-color: hsl(var(--body-color-100) / 0.9);
}

.bg-body-200 {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--body-color-200) / var(--tw-bg-opacity));
}

.bg-body-50 {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--body-color-50) / var(--tw-bg-opacity));
}

.bg-body-500 {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--body-color-500) / var(--tw-bg-opacity));
}

.bg-green-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(34 197 94 / var(--tw-bg-opacity));
}

.bg-primary-50 {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--primary-color-50) / var(--tw-bg-opacity));
}

.bg-primary-500 {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--primary-color-500) / var(--tw-bg-opacity));
}

.bg-red-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(239 68 68 / var(--tw-bg-opacity));
}

.bg-slate-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(100 116 139 / var(--tw-bg-opacity));
}

.bg-transparent {
  background-color: transparent;
}

.bg-warning {
  background-color: var(--warning-color);
}

.bg-yellow-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(234 179 8 / var(--tw-bg-opacity));
}

.fill-current {
  fill: currentColor;
}

.fill-primary-500 {
  fill: hsl(var(--primary-color-500) / 1);
}

.stroke-current {
  stroke: currentColor;
}

.object-cover {
  -o-object-fit: cover;
     object-fit: cover;
}

.object-\[50\%\2c 25\%\] {
  -o-object-position: 50% 25%;
     object-position: 50% 25%;
}

.p-1 {
  padding: 0.25rem;
}

.p-3 {
  padding: 0.75rem;
}

.p-4 {
  padding: 1rem;
}

.p-6 {
  padding: 1.5rem;
}

.p-8 {
  padding: 2rem;
}

.px-1 {
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}

.px-5 {
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}

.px-8 {
  padding-left: 2rem;
  padding-right: 2rem;
}

.px-9 {
  padding-left: 2.25rem;
  padding-right: 2.25rem;
}

.py-16 {
  padding-top: 4rem;
  padding-bottom: 4rem;
}

.py-3 {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

.py-8 {
  padding-top: 2rem;
  padding-bottom: 2rem;
}

.pb-16 {
  padding-bottom: 4rem;
}

.pl-4 {
  padding-left: 1rem;
}

.pt-16 {
  padding-top: 4rem;
}

.pt-3 {
  padding-top: 0.75rem;
}

.pt-4 {
  padding-top: 1rem;
}

.text-center {
  text-align: center;
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-3xl {
  font-size: 1.875rem;
  line-height: 2.25rem;
}

.text-\[clamp\(1rem\2c 50vw\2c 16rem\)\] {
  font-size: clamp(1rem,50vw,16rem);
}

.text-base {
  font-size: 1rem;
  line-height: 1.5rem;
}

.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}

.font-medium {
  font-weight: 500;
}

.leading-5 {
  line-height: 1.25rem;
}

.text-body-100 {
  --tw-text-opacity: 1;
  color: hsl(var(--body-color-100) / var(--tw-text-opacity));
}

.text-input {
  color: var(--input-color);
}

.text-primary-500 {
  --tw-text-opacity: 1;
  color: hsl(var(--primary-color-500) / var(--tw-text-opacity));
}

.text-primary-700 {
  --tw-text-opacity: 1;
  color: hsl(var(--primary-color-700) / var(--tw-text-opacity));
}

.text-slate-400 {
  --tw-text-opacity: 1;
  color: rgb(148 163 184 / var(--tw-text-opacity));
}

.text-slate-50 {
  --tw-text-opacity: 1;
  color: rgb(248 250 252 / var(--tw-text-opacity));
}

.text-text-300 {
  --tw-text-opacity: 1;
  color: hsl(var(--text-color-300) / var(--tw-text-opacity));
}

.text-text-400 {
  --tw-text-opacity: 1;
  color: hsl(var(--text-color-400) / var(--tw-text-opacity));
}

.text-text-500 {
  --tw-text-opacity: 1;
  color: hsl(var(--text-color-500) / var(--tw-text-opacity));
}

.text-text-700 {
  --tw-text-opacity: 1;
  color: hsl(var(--text-color-700) / var(--tw-text-opacity));
}

.shadow-\[0_0_0_100vmax_hsl\(var\(--body-color-50\)\)\] {
  --tw-shadow: 0 0 0 100vmax hsl(var(--body-color-50));
  --tw-shadow-colored: 0 0 0 100vmax var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-lg {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-xl {
  --tw-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.outline-none {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.outline {
  outline-style: solid;
}

.ring-4 {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.ring-body-50 {
  --tw-ring-opacity: 1;
  --tw-ring-color: hsl(var(--body-color-50) / var(--tw-ring-opacity));
}

.ring-primary-500 {
  --tw-ring-opacity: 1;
  --tw-ring-color: hsl(var(--primary-color-500) / var(--tw-ring-opacity));
}

.ring-offset-2 {
  --tw-ring-offset-width: 2px;
}

.ring-offset-body-50 {
  --tw-ring-offset-color: hsl(var(--body-color-50) / 1);
}

.blur {
  --tw-blur: blur(8px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.hue-rotate-180 {
  --tw-hue-rotate: hue-rotate(180deg);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.invert {
  --tw-invert: invert(100%);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.backdrop-blur-xl {
  --tw-backdrop-blur: blur(24px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.transition-\[flex-basis\] {
  transition-property: flex-basis;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-\[height\] {
  transition-property: height;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-\[stroke-dashoffset\2c _stroke-dasharray\] {
  transition-property: stroke-dashoffset, stroke-dasharray;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-colors {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-transform {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-300 {
  transition-duration: 300ms;
}

.duration-500 {
  transition-duration: 500ms;
}

.\[animation-iteration-count\:0\] {
  animation-iteration-count: 0;
}

.\[animation-play-state\:paused\] {
  animation-play-state: paused;
}

.\[clip-path\:inset\(0_-100vmax\)\] {
  -webkit-clip-path: inset(0 -100vmax);
          clip-path: inset(0 -100vmax);
}

@media (prefers-color-scheme: light) {
  :root {
    --dark-mode: 0;
    color-scheme: light;
  }
}

@media (prefers-color-scheme: dark) {
  :root {
    --dark-mode: 1;
    color-scheme: dark;
  }
}

:root.light {
  --dark-mode: 0;
  color-scheme: light;
}

:root.dark {
  --dark-mode: 1;
  color-scheme: dark;
}

*::before,
*,
*::after {
  border-color: var(--border-color);
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

*:focus-visible {
  outline: solid 2px hsl(var(--primary-color-500));
}

html {
  scroll-padding-top: 4rem;
  /* header is 4rem */
  hanging-punctuation: first last;
}

body,
dialog > * {
  color: hsl(var(--text-color-300));
  font-size: 1rem;
  font-weight: 500;
  line-height: 1.5rem;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  color: hsl(var(--text-color-500));
  font-weight: 600;
  text-wrap: balance;
}

h1 {
  color: hsl(var(--text-color-700));
  font-size: 3rem;
  line-height: 1;
}

h2 {
  font-size: 2.25rem;
  line-height: 2.5rem;
}

h3 {
  font-size: 1.875rem;
  line-height: 2.25rem;
}

h4 {
  font-size: 1.5rem;
  line-height: 2rem;
}

h5 {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

h6 {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

p {
  max-width: 65ch;
  text-wrap: pretty;
}

img,
picture,
svg,
video {
  display: block;
  max-width: 100%;
}

/*==================================================
	hamburger icon
==================================================*/

.path1,
.path3 {
  stroke-dasharray: 60 207;
}

.path2 {
  stroke-dasharray: 60 60;
}

button[aria-expanded='true'] .path1,
button[aria-expanded='true'] .path3 {
  stroke-dasharray: 90 207;
  stroke-dashoffset: -134;
}

button[aria-expanded='true'] .path2 {
  stroke-dasharray: 1 60;
  stroke-dashoffset: -30;
}

/*==================================================
	selfie
==================================================*/

.heroSection {
  min-height: calc(min(1000px, 100vh) - 4rem);
  min-height: calc(min(1000px, 100svh) - 4rem);
}

/*==================================================
	selfie
==================================================*/

@media (min-width: 1024px) {
  img.blob {
    -webkit-mask-image: url('../public/img/raw SVGs/small blob.svg');
            mask-image: url('../public/img/raw SVGs/small blob.svg');
    -webkit-mask-size: contain;
            mask-size: contain;
    -webkit-mask-repeat: no-repeat;
            mask-repeat: no-repeat;
    -webkit-mask-position: center;
            mask-position: center;
  }
}

@media (prefers-reduced-motion: no-preference) {
  :has(:target) {
    scroll-behavior: smooth;
  }
}

@keyframes backgroundMove {
  to {
    background-position: left top;
  }
}

@keyframes cursorBlink {
  50% {
    opacity: 0;
  }
}

.marker\:text-primary-500 *::marker {
  color: hsl(var(--primary-color-500) );
}

.marker\:text-primary-500::marker {
  color: hsl(var(--primary-color-500) );
}

.before\:absolute::before {
  content: var(--tw-content);
  position: absolute;
}

.before\:left-\[-7px\]::before {
  content: var(--tw-content);
  left: -7px;
}

.before\:top-\[-7px\]::before {
  content: var(--tw-content);
  top: -7px;
}

.before\:z-\[-1\]::before {
  content: var(--tw-content);
  z-index: -1;
}

.before\:h-\[calc\(100\%_\+_14px\)\]::before {
  content: var(--tw-content);
  height: calc(100% + 14px);
}

.before\:w-\[calc\(100\%_\+_14px\)\]::before {
  content: var(--tw-content);
  width: calc(100% + 14px);
}

.before\:animate-\[backgroundMove_10s_linear_forwards\]::before {
  content: var(--tw-content);
  animation: backgroundMove 10s linear forwards;
}

.before\:rounded-xl::before {
  content: var(--tw-content);
  border-radius: 0.75rem;
}

.before\:bg-gradient-to-br::before {
  content: var(--tw-content);
  background-image: linear-gradient(to bottom right, var(--tw-gradient-stops));
}

.before\:from-primary-500::before {
  content: var(--tw-content);
  --tw-gradient-from: hsl(var(--primary-color-500) / 1) var(--tw-gradient-from-position);
  --tw-gradient-to: hsl(var(--primary-color-500) / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.before\:from-50\%::before {
  content: var(--tw-content);
  --tw-gradient-from-position: 50%;
}

.before\:to-transparent::before {
  content: var(--tw-content);
  --tw-gradient-to: transparent var(--tw-gradient-to-position);
}

.before\:to-50\%::before {
  content: var(--tw-content);
  --tw-gradient-to-position: 50%;
}

.before\:bg-\[length\:200\%_200\%\]::before {
  content: var(--tw-content);
  background-size: 200% 200%;
}

.before\:bg-right-bottom::before {
  content: var(--tw-content);
  background-position: right bottom;
}

.before\:content-\[\"\"\]::before {
  --tw-content: "";
  content: var(--tw-content);
}

.after\:absolute::after {
  content: var(--tw-content);
  position: absolute;
}

.after\:top-0::after {
  content: var(--tw-content);
  top: 0px;
}

.after\:h-full::after {
  content: var(--tw-content);
  height: 100%;
}

.after\:w-full::after {
  content: var(--tw-content);
  width: 100%;
}

.after\:bg-black\/50::after {
  content: var(--tw-content);
  background-color: rgb(0 0 0 / 0.5);
}

.after\:bg-\[url\(\/img\/play\.svg\)\]::after {
  content: var(--tw-content);
  background-image: url(/img/play.svg);
}

.after\:bg-\[url\(\/img\/pause\.svg\)\]::after {
  content: var(--tw-content);
  background-image: url(/img/pause.svg);
}

.after\:bg-\[length\:100px_100px\]::after {
  content: var(--tw-content);
  background-size: 100px 100px;
}

.after\:bg-\[length\:calc\(200px_\/_3\)_calc\(200px_\/_3\)\]::after {
  content: var(--tw-content);
  background-size: calc(200px / 3) calc(200px / 3);
}

.after\:bg-\[length\:calc\(100\%_\/_3\)_calc\(100\%_\/_3\)\]::after {
  content: var(--tw-content);
  background-size: calc(100% / 3) calc(100% / 3);
}

.after\:bg-center::after {
  content: var(--tw-content);
  background-position: center;
}

.after\:bg-no-repeat::after {
  content: var(--tw-content);
  background-repeat: no-repeat;
}

.even\:w-\[calc\(0\.75rem\*2\+1\.5rem\)\]:nth-child(even) {
  width: calc(0.75rem * 2 + 1.5rem);
}

.hover\:scale-110:hover {
  --tw-scale-x: 1.1;
  --tw-scale-y: 1.1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:bg-body-100:hover {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--body-color-100) / var(--tw-bg-opacity));
}

.hover\:bg-primary-50:hover {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--primary-color-50) / var(--tw-bg-opacity));
}

.hover\:bg-warning-lighter:hover {
  background-color: var(--warning-color-lighter);
}

.hover\:text-primary-500:hover {
  --tw-text-opacity: 1;
  color: hsl(var(--primary-color-500) / var(--tw-text-opacity));
}

.hover\:text-warning-darker:hover {
  color: var(--warning-color-darker);
}

.hover\:shadow-inner:hover {
  --tw-shadow: inset 0 2px 4px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: inset 0 2px 4px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.after\:hover\:bg-black\/50:hover::after {
  content: var(--tw-content);
  background-color: rgb(0 0 0 / 0.5);
}

.after\:hover\:bg-\[url\(\/img\/play\.svg\)\]:hover::after {
  content: var(--tw-content);
  background-image: url(/img/play.svg);
}

.after\:hover\:bg-\[url\(\/img\/pause\.svg\)\]:hover::after {
  content: var(--tw-content);
  background-image: url(/img/pause.svg);
}

.focus-visible\:scale-110:focus-visible {
  --tw-scale-x: 1.1;
  --tw-scale-y: 1.1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.focus-visible\:bg-body-100:focus-visible {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--body-color-100) / var(--tw-bg-opacity));
}

.focus-visible\:bg-primary-50:focus-visible {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--primary-color-50) / var(--tw-bg-opacity));
}

.focus-visible\:bg-warning-lighter:focus-visible {
  background-color: var(--warning-color-lighter);
}

.focus-visible\:text-primary-500:focus-visible {
  --tw-text-opacity: 1;
  color: hsl(var(--primary-color-500) / var(--tw-text-opacity));
}

.focus-visible\:text-warning-darker:focus-visible {
  color: var(--warning-color-darker);
}

.focus-visible\:shadow-inner:focus-visible {
  --tw-shadow: inset 0 2px 4px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: inset 0 2px 4px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.focus-visible\:outline-none:focus-visible {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.focus-visible\:outline:focus-visible {
  outline-style: solid;
}

.focus-visible\:outline-2:focus-visible {
  outline-width: 2px;
}

.focus-visible\:outline-primary-500:focus-visible {
  outline-color: hsl(var(--primary-color-500) / 1);
}

.focus-visible\:outline-warning:focus-visible {
  outline-color: var(--warning-color);
}

.focus-visible\:ring-2:focus-visible {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.group:hover .group-hover\:fill-primary-300 {
  fill: hsl(var(--primary-color-300) / 1);
}

.group:hover .group-hover\:text-primary-50 {
  --tw-text-opacity: 1;
  color: hsl(var(--primary-color-50) / var(--tw-text-opacity));
}

.group:hover .group-hover\:text-primary-500 {
  --tw-text-opacity: 1;
  color: hsl(var(--primary-color-500) / var(--tw-text-opacity));
}

.group:hover .group-hover\:text-text-300 {
  --tw-text-opacity: 1;
  color: hsl(var(--text-color-300) / var(--tw-text-opacity));
}

.group:focus-visible .group-focus-visible\:text-primary-50 {
  --tw-text-opacity: 1;
  color: hsl(var(--primary-color-50) / var(--tw-text-opacity));
}

.group:focus-visible .group-focus-visible\:text-primary-500 {
  --tw-text-opacity: 1;
  color: hsl(var(--primary-color-500) / var(--tw-text-opacity));
}

.aria-selected\:bg-primary-500[aria-selected="true"] {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--primary-color-500) / var(--tw-bg-opacity));
}

.aria-selected\:text-input[aria-selected="true"] {
  color: var(--input-color);
}

:is(.dark .dark\:block) {
  display: block;
}

:is(.dark .dark\:hidden) {
  display: none;
}

:is(.dark .dark\:bg-body-200) {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--body-color-200) / var(--tw-bg-opacity));
}

:is(.dark .dark\:bg-body-300) {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--body-color-300) / var(--tw-bg-opacity));
}

:is(.dark .dark\:bg-body-500) {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--body-color-500) / var(--tw-bg-opacity));
}

:is(.dark .dark\:bg-green-600) {
  --tw-bg-opacity: 1;
  background-color: rgb(22 163 74 / var(--tw-bg-opacity));
}

:is(.dark .dark\:bg-red-600) {
  --tw-bg-opacity: 1;
  background-color: rgb(220 38 38 / var(--tw-bg-opacity));
}

:is(.dark .dark\:bg-yellow-600) {
  --tw-bg-opacity: 1;
  background-color: rgb(202 138 4 / var(--tw-bg-opacity));
}

:is(.dark .dark\:shadow-\[0_0_0_100vmax_hsl\(var\(--body-color-200\)\)\]) {
  --tw-shadow: 0 0 0 100vmax hsl(var(--body-color-200));
  --tw-shadow-colored: 0 0 0 100vmax var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

:is(.dark .dark\:shadow-\[0px_5px_25px_-5px\]) {
  --tw-shadow: 0px 5px 25px -5px;
  --tw-shadow-colored: 0px 5px 25px -5px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

:is(.dark .dark\:shadow-primary-500) {
  --tw-shadow-color: hsl(var(--primary-color-500) / 1);
  --tw-shadow: var(--tw-shadow-colored);
}

:is(.dark .group:hover .dark\:group-hover\:fill-primary-700) {
  fill: hsl(var(--primary-color-700) / 1);
}

:is(.dark .group:hover .dark\:group-hover\:text-body-300) {
  --tw-text-opacity: 1;
  color: hsl(var(--body-color-300) / var(--tw-text-opacity));
}

:is(.dark .group:focus-visible .dark\:group-focus-visible\:text-body-300) {
  --tw-text-opacity: 1;
  color: hsl(var(--body-color-300) / var(--tw-text-opacity));
}

@media (min-width: 640px) {
  .sm\:flex {
    display: flex;
  }

  .sm\:w-72 {
    width: 18rem;
  }

  .sm\:justify-self-end {
    justify-self: end;
  }
}

@media (min-width: 1024px) {
  .lg\:flex {
    display: flex;
  }

  .lg\:hidden {
    display: none;
  }

  .lg\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}

.\[\&\:not\(\[aria-selected\=\'true\'\]\)\]\:hover\:bg-primary-50:hover:not([aria-selected='true']) {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--primary-color-50) / var(--tw-bg-opacity));
}

.\[\&\:not\(\[aria-selected\=\'true\'\]\)\]\:hover\:text-primary-600:hover:not([aria-selected='true']) {
  --tw-text-opacity: 1;
  color: hsl(var(--primary-color-600) / var(--tw-text-opacity));
}

.\[\&\:not\(\[aria-selected\=\'true\'\]\)\]\:focus-visible\:bg-primary-50:focus-visible:not([aria-selected='true']) {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--primary-color-50) / var(--tw-bg-opacity));
}

.\[\&\:not\(\[aria-selected\=\'true\'\]\)\]\:focus-visible\:text-primary-600:focus-visible:not([aria-selected='true']) {
  --tw-text-opacity: 1;
  color: hsl(var(--primary-color-600) / var(--tw-text-opacity));
}

:is(.dark .dark\:\[\&\:not\(\[aria-selected\=\'true\'\]\)\]\:hover\:bg-primary-900:hover:not([aria-selected='true'])) {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--primary-color-900) / var(--tw-bg-opacity));
}

:is(.dark .dark\:\[\&\:not\(\[aria-selected\=\'true\'\]\)\]\:hover\:text-primary-400:hover:not([aria-selected='true'])) {
  --tw-text-opacity: 1;
  color: hsl(var(--primary-color-400) / var(--tw-text-opacity));
}

:is(.dark .dark\:\[\&\:not\(\[aria-selected\=\'true\'\]\)\]\:focus-visible\:bg-primary-900:focus-visible:not([aria-selected='true'])) {
  --tw-bg-opacity: 1;
  background-color: hsl(var(--primary-color-900) / var(--tw-bg-opacity));
}

:is(.dark .dark\:\[\&\:not\(\[aria-selected\=\'true\'\]\)\]\:focus-visible\:text-primary-400:focus-visible:not([aria-selected='true'])) {
  --tw-text-opacity: 1;
  color: hsl(var(--primary-color-400) / var(--tw-text-opacity));
}
