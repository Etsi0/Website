@import 'tailwindcss';

@custom-variant dark {
	@media (prefers-color-scheme: dark) {
		&:not(.light *) {
			@slot;
		}
	}
	&:is(.dark *) {
		@slot;
	}
}

@theme {
	--color-body-50: oklch(var(--body-color-50));
	--color-body-100: oklch(var(--body-color-100));
	--color-body-200: oklch(var(--body-color-200));
	--color-body-300: oklch(var(--body-color-300));
	--color-body-400: oklch(var(--body-color-400));
	--color-body-500: oklch(var(--body-color-500));

	--color-primary-50: oklch(var(--primary-color-50));
	--color-primary-100: oklch(var(--primary-color-100));
	--color-primary-200: oklch(var(--primary-color-200));
	--color-primary-300: oklch(var(--primary-color-300));
	--color-primary-400: oklch(var(--primary-color-400));
	--color-primary-500: oklch(var(--primary-color-500));
	--color-primary-600: oklch(var(--primary-color-600));
	--color-primary-700: oklch(var(--primary-color-700));
	--color-primary-800: oklch(var(--primary-color-800));
	--color-primary-900: oklch(var(--primary-color-900));
	--color-primary-950: oklch(var(--primary-color-950));

	--color-input: oklch(var(--input-color));

	--color-text-100: oklch(var(--text-color-100));
	--color-text-200: oklch(var(--text-color-200));
	--color-text-300: oklch(var(--text-color-300));
	--color-text-400: oklch(var(--text-color-400));
	--color-text-500: oklch(var(--text-color-500));
	--color-text-600: oklch(var(--text-color-600));
	--color-text-700: oklch(var(--text-color-700));
	--color-text-800: oklch(var(--text-color-800));
	--color-text-900: oklch(var(--text-color-900));

	--text-custom-md: var(--font-size-1);
	--text-custom-lg: var(--font-size-2);
	--text-custom-xl: var(--font-size-3);
	--text-custom-2xl: var(--font-size-4);
	--text-custom-3xl: var(--font-size-5);
	--text-custom-4xl: var(--font-size-6);
	--text-custom-5xl: var(--font-size-7);
}

@layer base {
	:root {
		--isDarkMode: 0;
		--hue-color: 277deg;
		--neutral-chroma: 0.01;
		color-scheme: light;
		interpolate-size: allow-keywords;

		/*==================================================
			Font
			startValue + (endValue - startValue) * (((index - 1) / (totalNumber - 1)) ^ 1.5)
		==================================================*/
		--font-size-1: 1rem;
		--font-size-2: 1.1360827635rem;
		--font-size-3: 1.3849001795rem;
		--font-size-4: 1.7071067812rem;
		--font-size-5: 2.0886621079rem;
		--font-size-6: 2.5214515486rem;
		--font-size-7: 3rem;

		/*==================================================
			Body colors
		==================================================*/
		--body-light: 0.97;
		--body-dark: 0.2;
		--body-step: calc(0.05 * (-1 + 2 * var(--isDarkMode)));
		--body-base: calc(var(--body-light) - (var(--body-light) - var(--body-dark)) * var(--isDarkMode));

		--body-lightness-50: calc(var(--body-base) + (var(--body-step) * 1));
		--body-color-50 : var(--body-lightness-50) var(--neutral-chroma) var(--hue-color);

		--body-lightness-100: calc(var(--body-base) + (var(--body-step) * 0));
		--body-color-100: var(--body-lightness-100) var(--neutral-chroma) var(--hue-color);

		--body-lightness-200: calc(var(--body-base) + (var(--body-step) * 2));
		--body-color-200: var(--body-lightness-200) var(--neutral-chroma) var(--hue-color);

		--body-lightness-300: calc(var(--body-base) + (var(--body-step) * 3));
		--body-color-300: var(--body-lightness-300) var(--neutral-chroma) var(--hue-color);

		--body-lightness-400: calc(var(--body-base) + (var(--body-step) * 4));
		--body-color-400: var(--body-lightness-400) var(--neutral-chroma) var(--hue-color);

		--body-lightness-500: calc(var(--body-base) + (var(--body-step) * 5));
		--body-color-500: var(--body-lightness-500) var(--neutral-chroma) var(--hue-color);

		/*==================================================
			Primary colors
			option 1: (primaryChroma / primaryLightness) * min(currentLightness, 1 - currentLightness)
			option 2: (primaryChroma / primaryLightness) * (primaryLightness - abs(currentLightness - primaryLightness)) <- simpler to use in a calculator since you only need to change one variable per iteration
		==================================================*/
		--primary-color-50: 0.95 0.02 var(--hue-color);
		--primary-color-100: 0.90 0.04 var(--hue-color);
		--primary-color-200: 0.80 0.08 var(--hue-color);
		--primary-color-300: 0.70 0.12 var(--hue-color);
		--primary-color-400: 0.60 0.16 var(--hue-color);
		--primary-color-500: 0.50 0.2 var(--hue-color);
		--primary-color-600: 0.40 0.16 var(--hue-color);
		--primary-color-700: 0.30 0.12 var(--hue-color);
		--primary-color-800: 0.20 0.08 var(--hue-color);
		--primary-color-900: 0.10 0.04 var(--hue-color);
		--primary-color-950: 0.05 0.02 var(--hue-color);

		/*==================================================
			Text colors
		==================================================*/
		--text-color-100: abs(0.90 - 1 * var(--isDarkMode)) var(--neutral-chroma) var(--hue-color);
		--text-color-200: abs(0.80 - 1 * var(--isDarkMode)) var(--neutral-chroma) var(--hue-color);
		--text-color-300: abs(0.70 - 1 * var(--isDarkMode)) var(--neutral-chroma) var(--hue-color);
		--text-color-400: abs(0.60 - 1 * var(--isDarkMode)) var(--neutral-chroma) var(--hue-color);
		--text-color-500: abs(0.50 - 1 * var(--isDarkMode)) var(--neutral-chroma) var(--hue-color);
		--text-color-600: abs(0.40 - 1 * var(--isDarkMode)) var(--neutral-chroma) var(--hue-color);
		--text-color-700: abs(0.30 - 1 * var(--isDarkMode)) var(--neutral-chroma) var(--hue-color);
		--text-color-800: abs(0.20 - 1 * var(--isDarkMode)) var(--neutral-chroma) var(--hue-color);
		--text-color-900: abs(0.10 - 1 * var(--isDarkMode)) var(--neutral-chroma) var(--hue-color);
	}

	/*==================================================
		Dark mode switch
	==================================================*/
	@media (prefers-color-scheme: dark) {
		html:not(.light) {
			--isDarkMode: 1;
			color-scheme: dark;
		}
	}
	html.dark {
		--isDarkMode: 1;
		color-scheme: dark;
	}

	*,
	::before,
	::after {
		border-color: var(--color-body-200);

		transition-property: none;
		transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
		transition-duration: 150ms;
	}

	.dark *,
	.dark ::before,
	.dark ::after {
		border-color: var(--color-body-300);
	}

	*:focus-visible {
		outline: solid 2px var(--color-primary-500);
	}

	::selection {
		color: var(--color-primary-50);
		background: var(--color-primary-500);
	}

	html {
		scroll-padding-top: 4rem; /* header is 4rem */
		hanging-punctuation: first last;
	}

	body,
	dialog > * {
		color: var(--color-text-700);
		font-size: 1rem;
		font-weight: 400;
		line-height: 1.5rem;
	}

	h1,
	h2,
	h3,
	h4,
	h5,
	h6,
	p {
		line-height: 1.33em;
	}

	h1,
	h2,
	h3,
	h4,
	h5,
	h6 {
		color: var(--color-text-800);
		font-weight: 600;
		text-wrap: balance;
	}

	h1 {
		color: var(--color-text-900);
		font-size: var(--font-size-7);
	}

	h2 {
		font-size: var(--font-size-6);
	}

	h3 {
		font-size: var(--font-size-5);
	}

	h4 {
		font-size: var(--font-size-4);
	}

	h5 {
		font-size: var(--font-size-3);
	}

	h6 {
		font-size: var(--font-size-2);
	}

	p {
		font-size: var(--font-size-1);
		max-width: 65ch;
		text-wrap: pretty;
	}

	img,
	picture,
	svg,
	video {
		display: block;
		max-width: 100%;
	}

	/*==================================================
		hamburger icon
	==================================================*/
	.hamburger-button .path1,
	.hamburger-button .path3 {
		stroke-dasharray: 60 207;
	}
	.hamburger-button .path2 {
		stroke-dasharray: 60 60;
	}
	.hamburger-button[aria-expanded='true'] .path1,
	.hamburger-button[aria-expanded='true'] .path3 {
		stroke-dasharray: 90 207;
		stroke-dashoffset: -134;
	}
	.hamburger-button[aria-expanded='true'] .path2 {
		stroke-dasharray: 1 60;
		stroke-dashoffset: -30;
	}

	/*==================================================
		make section take up the full viewport - header
	==================================================*/
	.breakout-wrapper {
		--gap: 2rem;
		--full: minmax(var(--gap), 1fr);
		--breakout: minmax(0, var(--gap));
		--content: min(100% - var(--gap) * 2, 80rem); /* 80rem = 1280px */

		display: grid;
		grid-template-columns:
			[full-start] var(--full)
			[\2xl-start] var(--breakout)
			[xl-start] var(--breakout)
			[lg-start] var(--breakout)
			[md-start] var(--breakout)
			[sm-start] var(--breakout)
			[content-start] var(--content) [content-end]
			var(--breakout) [sm-end]
			var(--breakout) [md-end]
			var(--breakout) [lg-end]
			var(--breakout) [xl-end]
			var(--breakout) [\2xl-end]
			var(--full) [full-end];

		& > * {
			grid-column: content;
		}

		& > .col-sm {
			grid-column: sm;
		}

		& > .col-md {
			grid-column: md;
		}

		& > .col-lg {
			grid-column: lg;
		}

		& > .col-xl {
			grid-column: xl;
		}

		& > .col-2xl {
			grid-column: \2xl;
		}

		& > .col-full {
			grid-column: full;
		}
	}


	/*==================================================
		max height allowed on the header
	==================================================*/
	.heroSection {
		min-height: calc(min(62.5rem, 100svh) - 4rem);
	}

	/*==================================================
		make details animated
	==================================================*/
	details {
		overflow: hidden;
	}

	/*! don't add margin or padding here !*/
	details::details-content {
		block-size: 0;
		transition-property: block-size, content-visibility;
		transition-duration: 0.3s;
		transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
		transition-behavior: allow-discrete;
	}

	/*! don't add margin or padding here !*/
	details:open::details-content {
		block-size: auto;
	}


	/*==================================================
		code blocks
	==================================================*/
	.shiki {
		overflow-x: scroll;
		overflow-y: clip;

		counter-reset: step;
		counter-increment: step 0;

		border-radius: 0.5rem;
		padding: 1rem;
	}

	.shiki .line::before {
		content: counter(step);
		counter-increment: step;
		width: 1rem;
		margin-right: 1.5rem;
		display: inline-block;
		text-align: right;
		color: rgba(115,138,148,.4)
	}

	.dark .shiki,
	.dark .shiki span {
		color: var(--shiki-dark) !important;
		background-color: var(--shiki-dark-bg) !important;
		/* Optional, if you also want font styles */
		font-style: var(--shiki-dark-font-style) !important;
		font-weight: var(--shiki-dark-font-weight) !important;
		text-decoration: var(--shiki-dark-text-decoration) !important;
	}

	@media (prefers-reduced-motion: no-preference) {
		:has(:target) {
			scroll-behavior: smooth;
		}
	}

	@keyframes cursorBlink {
		50% {
			opacity: 0;
		}
	}
}
