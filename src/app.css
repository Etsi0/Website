@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
	:root {
		--dark-mode: 0;
		--hue-color: 240deg;
		color-scheme: light;

		/*==================================================
			Booleans
		==================================================*/
		--isLightMode: calc(1 - var(--dark-mode));
		--isDarkMode: var(--dark-mode);

		/*==================================================
			Body colors
		==================================================*/
		--body-color-50 : var(--hue-color) 12% max(5%, 100% * var(--isLightMode));
		--body-color-100: var(--hue-color) 12% max(10%, 95% * var(--isLightMode));
		--body-color-200: var(--hue-color) 12% max(20%, 85% * var(--isLightMode));
		--body-color-300: var(--hue-color) 12% max(30%, 75% * var(--isLightMode));
		--body-color-400: var(--hue-color) 12% max(40%, 65% * var(--isLightMode));
		--body-color-500: var(--hue-color) 12% max(50%, 55% * var(--isLightMode));

		/*==================================================
			Border colors
		==================================================*/
		--border-lightness: 76.5%;
		--border-color: var(--hue-color) 12% max(100% - var(--border-lightness), var(--border-lightness) * var(--isLightMode));

		/*==================================================
			Input colors
		==================================================*/
		--input-color: var(--hue-color) 70% 96%;

		/*==================================================
			Primary colors
		==================================================*/
		--primary-color-50: var(--hue-color) 81.92498870311792% 88.935%;
		--primary-color-100: var(--hue-color) 76.4150943396226% 83.03999999999999%;
		--primary-color-200: var(--hue-color) 73.55080449636321% 77.315%;
		--primary-color-300: var(--hue-color) 71.671388101983% 71.76%;
		--primary-color-400: var(--hue-color) 70.26022304832715% 66.375%;
		--primary-color-500: var(--hue-color) 69.10401647785788% 61.160000000000004%;
		--primary-color-600: var(--hue-color) 50.9433962264151% 49.68749999999999%;
		--primary-color-700: var(--hue-color) 58.730158730158735% 39.06%;
		--primary-color-800: var(--hue-color) 67.3640167364017% 29.277499999999996%;
		--primary-color-900: var(--hue-color) 76.99115044247789% 20.339999999999996%;
		--primary-color-950: var(--hue-color) 87.79342723004696% 12.2475%;

		/*==================================================
			Text colors
		==================================================*/
		--text-lightness-300: 36.075%;
		--text-color-300: var(--hue-color) 12% max((100% - var(--text-lightness-300)) * var(--isDarkMode), var(--text-lightness-300));
		--text-lightness-400: 27.888%;
		--text-color-400: var(--hue-color) 12% max((100% - var(--text-lightness-400)) * var(--isDarkMode), var(--text-lightness-400));
		--text-lightness-500: 20.686999999999998%;
		--text-color-500: var(--hue-color) 12% max((100% - var(--text-lightness-500)) * var(--isDarkMode), var(--text-lightness-500));
		--text-lightness-600: 14.472000000000001%;
		--text-color-600: var(--hue-color) 12% max((100% - var(--text-lightness-600)) * var(--isDarkMode), var(--text-lightness-600));
		--text-lightness-700: 9.243%;
		--text-color-700: var(--hue-color) 12% max((100% - var(--text-lightness-700)) * var(--isDarkMode), var(--text-lightness-700));
	}
}

/*==================================================
	Dark mode switch
==================================================*/
@media (prefers-color-scheme: dark) {
	:root:not(.light) {
		--dark-mode: 1;
		color-scheme: dark;
	}
}
:root.dark {
	--dark-mode: 1;
	color-scheme: dark;
}

.dark .shiki,
.dark .shiki span {
	color: var(--shiki-dark) !important;
	background-color: var(--shiki-dark-bg) !important;
	/* Optional, if you also want font styles */
	font-style: var(--shiki-dark-font-style) !important;
	font-weight: var(--shiki-dark-font-weight) !important;
	text-decoration: var(--shiki-dark-text-decoration) !important;
}

*::before,
*,
*::after {
	border-color: hsl(var(--border-color));

	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-duration: 150ms;
}

*:focus-visible {
	outline: solid 2px hsl(var(--primary-color-500));
}

html {
	scroll-padding-top: 4rem; /* header is 4rem */
	hanging-punctuation: first last;
}

body,
dialog > * {
	color: hsl(var(--text-color-300));
	font-size: 1rem;
	font-weight: 400;
	line-height: 1.5rem;
}

h1,
h2,
h3,
h4,
h5,
h6 {
	color: hsl(var(--text-color-500));
	font-weight: 600;
	text-wrap: balance;
}

h1 {
	color: hsl(var(--text-color-700));
	font-size: 3rem;
	line-height: 1;
}

h2 {
	font-size: 2.25rem;
	line-height: 2.5rem;
}

h3 {
	font-size: 1.875rem;
	line-height: 2.25rem;
}

h4 {
	font-size: 1.5rem;
	line-height: 2rem;
}

h5 {
	font-size: 1.25rem;
	line-height: 1.75rem;
}

h6 {
	font-size: 1.125rem;
	line-height: 1.75rem;
}

p {
	max-width: 65ch;
	text-wrap: pretty;
}

img,
picture,
svg,
video {
	display: block;
	max-width: 100%;
}

/*==================================================
	hamburger icon
==================================================*/
.path1,
.path3 {
	stroke-dasharray: 60 207;
}
.path2 {
	stroke-dasharray: 60 60;
}
button[aria-expanded='true'] .path1,
button[aria-expanded='true'] .path3 {
	stroke-dasharray: 90 207;
	stroke-dashoffset: -134;
}
button[aria-expanded='true'] .path2 {
	stroke-dasharray: 1 60;
	stroke-dashoffset: -30;
}

/*==================================================
	make section take up the full viewport - header
==================================================*/
.heroSection {
	min-height: calc(min(62.5rem, 100vh) - 4rem);
	min-height: calc(min(62.5rem, 100svh) - 4rem);
}


/*==================================================
	code blocks
==================================================*/
.shiki {
	counter-reset: step;
	counter-increment: step 0;

	border-radius: 0.5rem;
	padding: 1rem;
}

.shiki .line::before {
	content: counter(step);
	counter-increment: step;
	width: 1rem;
	margin-right: 1.5rem;
	display: inline-block;
	text-align: right;
	color: rgba(115,138,148,.4)
}

@media (prefers-reduced-motion: no-preference) {
	:has(:target) {
		scroll-behavior: smooth;
	}
}

@keyframes cursorBlink {
	50% {
		opacity: 0;
	}
}
