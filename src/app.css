@import 'tailwindcss';

@custom-variant dark {
	@media (prefers-color-scheme: dark) {
		&:not(.light *) {
			@slot;
		}
	}
	&:is(.dark *) {
		@slot;
	}
}

@theme {
	--color-body-50: hsl(var(--body-color-50));
	--color-body-100: hsl(var(--body-color-100));
	--color-body-200: hsl(var(--body-color-200));
	--color-body-300: hsl(var(--body-color-300));
	--color-body-400: hsl(var(--body-color-400));
	--color-body-500: hsl(var(--body-color-500));

	--color-primary-50: hsl(var(--primary-color-50));
	--color-primary-100: hsl(var(--primary-color-100));
	--color-primary-200: hsl(var(--primary-color-200));
	--color-primary-300: hsl(var(--primary-color-300));
	--color-primary-400: hsl(var(--primary-color-400));
	--color-primary-500: hsl(var(--primary-color-500));
	--color-primary-600: hsl(var(--primary-color-600));
	--color-primary-700: hsl(var(--primary-color-700));
	--color-primary-800: hsl(var(--primary-color-800));
	--color-primary-900: hsl(var(--primary-color-900));
	--color-primary-950: hsl(var(--primary-color-950));

	--color-input: hsl(var(--input-color));

	--color-text-300: hsl(var(--text-color-300));
	--color-text-400: hsl(var(--text-color-400));
	--color-text-500: hsl(var(--text-color-500));
	--color-text-600: hsl(var(--text-color-600));
	--color-text-700: hsl(var(--text-color-700));
}

@layer base {
	:root {
		--isDarkMode: 0;
		--hue-color: 240deg;
		color-scheme: light;
		interpolate-size: allow-keywords;

		/*==================================================
			Font
			startValue + (endValue - startValue) * (((index - 1) / (totalNumber - 1)) ^ 1.5)
		==================================================*/
		--font-min: 1rem;
		--font-max: 3rem;
		--font-steps: 7;
		--font-curve: 1.5;
		--font-size-1: calc(var(--font-min) + (var(--font-max) - var(--font-min)) * pow((1 - 1) / (var(--font-steps) - 1), var(--font-curve)));
		--font-size-2: calc(var(--font-min) + (var(--font-max) - var(--font-min)) * pow((2 - 1) / (var(--font-steps) - 1), var(--font-curve)));
		--font-size-3: calc(var(--font-min) + (var(--font-max) - var(--font-min)) * pow((3 - 1) / (var(--font-steps) - 1), var(--font-curve)));
		--font-size-4: calc(var(--font-min) + (var(--font-max) - var(--font-min)) * pow((4 - 1) / (var(--font-steps) - 1), var(--font-curve)));
		--font-size-5: calc(var(--font-min) + (var(--font-max) - var(--font-min)) * pow((5 - 1) / (var(--font-steps) - 1), var(--font-curve)));
		--font-size-6: calc(var(--font-min) + (var(--font-max) - var(--font-min)) * pow((6 - 1) / (var(--font-steps) - 1), var(--font-curve)));
		--font-size-7: calc(var(--font-min) + (var(--font-max) - var(--font-min)) * pow((7 - 1) / (var(--font-steps) - 1), var(--font-curve)));

		/*==================================================
			Booleans
		==================================================*/
		--isLightMode: calc(1 - var(--isDarkMode));

		/*==================================================
			Body colors
		==================================================*/
		--body-color-50 : var(--hue-color) 16% abs(100% - 105% * var(--isDarkMode));
		--body-color-100: var(--hue-color) 16% abs(95% - 105% * var(--isDarkMode));
		--body-color-200: var(--hue-color) 16% abs(85% - 105% * var(--isDarkMode));
		--body-color-300: var(--hue-color) 16% abs(75% - 105% * var(--isDarkMode));
		--body-color-400: var(--hue-color) 16% abs(65% - 105% * var(--isDarkMode));
		--body-color-500: var(--hue-color) 16% abs(55% - 105% * var(--isDarkMode));

		/*==================================================
			Input colors
		==================================================*/
		--input-color: var(--hue-color) 70% 96%;

		/*==================================================
			Primary colors
		==================================================*/
		--primary-color-50: var(--hue-color) 81.92498870311792% 88.935%;
		--primary-color-100: var(--hue-color) 76.4150943396226% 83.03999999999999%;
		--primary-color-200: var(--hue-color) 73.55080449636321% 77.315%;
		--primary-color-300: var(--hue-color) 71.671388101983% 71.76%;
		--primary-color-400: var(--hue-color) 70.26022304832715% 66.375%;
		--primary-color-500: var(--hue-color) 69.10401647785788% 61.160000000000004%;
		--primary-color-600: var(--hue-color) 50.9433962264151% 49.68749999999999%;
		--primary-color-700: var(--hue-color) 58.730158730158735% 39.06%;
		--primary-color-800: var(--hue-color) 67.3640167364017% 29.277499999999996%;
		--primary-color-900: var(--hue-color) 76.99115044247789% 20.339999999999996%;
		--primary-color-950: var(--hue-color) 87.79342723004696% 12.2475%;

		/*==================================================
			Text colors
		==================================================*/
		--text-color-300: var(--hue-color) 12% abs(36.075% - 100% * var(--isDarkMode));
		--text-color-400: var(--hue-color) 12% abs(27.888% - 100% * var(--isDarkMode));
		--text-color-500: var(--hue-color) 12% abs(20.687% - 100% * var(--isDarkMode));
		--text-color-600: var(--hue-color) 12% abs(14.472% - 100% * var(--isDarkMode));
		--text-color-700: var(--hue-color) 12% abs(9.243% - 100% * var(--isDarkMode));
	}

	/*==================================================
		Dark mode switch
	==================================================*/
	@media (prefers-color-scheme: dark) {
		&:not(.light) {
			--isDarkMode: 1;
			color-scheme: dark;
		}
	}
	&:is(.dark) {
		--isDarkMode: 1;
		color-scheme: dark;
	}

	*,
	::before,
	::after {
		border-color: hsl(var(--body-color-200));

		transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
		transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
		transition-duration: 150ms;
	}

	.dark *,
	.dark ::before,
	.dark ::after {
		border-color: hsl(var(--body-color-300));
	}

	*:focus-visible {
		outline: solid 2px hsl(var(--primary-color-500));
	}

	html {
		scroll-padding-top: 4rem; /* header is 4rem */
		hanging-punctuation: first last;
	}

	body,
	dialog > * {
		color: hsl(var(--text-color-300));
		font-size: 1rem;
		font-weight: 400;
		line-height: 1.5rem;
	}

	h1,
	h2,
	h3,
	h4,
	h5,
	h6,
	p {
		line-height: 1.33em;
	}

	h1,
	h2,
	h3,
	h4,
	h5,
	h6 {
		color: hsl(var(--text-color-500));
		font-weight: 600;
		text-wrap: balance;
	}

	h1 {
		color: hsl(var(--text-color-700));
		font-size: var(--font-size-7);
	}

	h2 {
		font-size: var(--font-size-6);
	}

	h3 {
		font-size: var(--font-size-5);
	}

	h4 {
		font-size: var(--font-size-4);
	}

	h5 {
		font-size: var(--font-size-3);
	}

	h6 {
		font-size: var(--font-size-2);
	}

	p {
		font-size: var(--font-size-1);
		max-width: 65ch;
		text-wrap: pretty;
	}

	img,
	picture,
	svg,
	video {
		display: block;
		max-width: 100%;
	}

	/*==================================================
		hamburger icon
	==================================================*/
	.path1,
	.path3 {
		stroke-dasharray: 60 207;
	}
	.path2 {
		stroke-dasharray: 60 60;
	}
	button[aria-expanded='true'] .path1,
	button[aria-expanded='true'] .path3 {
		stroke-dasharray: 90 207;
		stroke-dashoffset: -134;
	}
	button[aria-expanded='true'] .path2 {
		stroke-dasharray: 1 60;
		stroke-dashoffset: -30;
	}

	/*==================================================
		make section take up the full viewport - header
	==================================================*/
	.heroSection {
		min-height: calc(min(62.5rem, 100vh) - 4rem);
		min-height: calc(min(62.5rem, 100svh) - 4rem);
	}

	/*==================================================
		make details animated
	==================================================*/
	details {
		overflow: hidden;
	}

	/*! don't add margin or padding here !*/
	details::details-content {
		block-size: 0;
		transition: block-size 0.3s, content-visibility 0.3s;
		transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
		transition-behavior: allow-discrete;
	}

	/*! don't add margin or padding here !*/
	details:open::details-content {
		block-size: auto;
	}


	/*==================================================
		code blocks
	==================================================*/
	.shiki {
		overflow-x: scroll;
		overflow-y: clip;

		counter-reset: step;
		counter-increment: step 0;

		border-radius: 0.5rem;
		padding: 1rem;
	}

	.shiki .line::before {
		content: counter(step);
		counter-increment: step;
		width: 1rem;
		margin-right: 1.5rem;
		display: inline-block;
		text-align: right;
		color: rgba(115,138,148,.4)
	}

	.dark .shiki,
	.dark .shiki span {
		color: var(--shiki-dark) !important;
		background-color: var(--shiki-dark-bg) !important;
		/* Optional, if you also want font styles */
		font-style: var(--shiki-dark-font-style) !important;
		font-weight: var(--shiki-dark-font-weight) !important;
		text-decoration: var(--shiki-dark-text-decoration) !important;
	}

	@media (prefers-reduced-motion: no-preference) {
		:has(:target) {
			scroll-behavior: smooth;
		}
	}

	@keyframes cursorBlink {
		50% {
			opacity: 0;
		}
	}
}
